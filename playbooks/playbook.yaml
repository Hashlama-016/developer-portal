---
- name: Install Rundeck 
  hosts: localhost
  gather_facts: no
  become: yes
  vars_files:
    - ../secerts/sercrets.yaml
  tasks:

  #### install rundeck ###

    - name: Install required dependencies
      apt:
        name:
          - curl
          - openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Add Rundeck GPG key
      shell: |
        curl -fsSL https://packages.rundeck.com/pagerduty/rundeck/gpgkey | gpg --dearmor -o /usr/share/keyrings/rundeck-keyring.gpg
      args:
        creates: /usr/share/keyrings/rundeck-keyring.gpg

    - name: Add Rundeck repository
      copy:
        dest: /etc/apt/sources.list.d/rundeck.list
        content: |
          deb [signed-by=/usr/share/keyrings/rundeck-keyring.gpg] https://packages.rundeck.com/pagerduty/rundeck/any/ any main

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Rundeck
      apt:
        name: rundeck
        state: present

    - name: Enable and start Rundeck service
      service:
        name: rundeckd
        enabled: yes
        state: started

    - name: config rundeck-config.properties
      template: 
        src: ../templates/rundeck-config.properties.j2
        dest: /etc/rundeck/rundeck-config.properties
      notify:
        - restart Rundeck

    - name: repalce loaclhost
      replace:
        path: /etc/rundeck/framework.properties
        regexp: "localhost"
        replace: "{{ ansible_all_ipv4_addresses[0] }}"
      notify: restart Rundeck

    - name: open port 4440
      ufw:
        rule: allow
        port: "4440"
        proto: tcp

    ### add user ###

    - name: Encrypt password using Rundeck's built-in utility
      expect:
        command: "java -jar /var/lib/rundeck/bootstrap/rundeck-5.10.0-20250312.war --encryptpwd Jetty"
        responses:
          "Username \\(Optional, but necessary for Crypt encoding\\):": "{{ rundeck_user }}"
          "\\*Value To Encrypt \\(The text you want to encrypt\\):": "{{ rundeck_pass }}"
      register: encryption_output

    - name: get encrypted password
      set_fact:
        rundeck_pass: "{{ (encryption_output.stdout_lines | map('regex_search', 'bcrypt: BCRYPT.*$') | select() | first )[8: ] }}"
    
    - name: config realm.properties
      template: 
        src: ../templates/realm.properties.j2
        dest: /etc/rundeck/realm.properties


  handlers:
    - name: restart Rundeck
      service:
        name: rundeckd
        state: restarted
        